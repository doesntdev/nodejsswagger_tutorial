swagger: "2.0"
info:
  version: "0.0.1"
  title: Todo API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    get:
      description: "The endpoint returned all the todos available in the database"
      operationId: "GetAllTodos"
      parameters: []
      responses:
        200:
          description: "an array of todos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
      x-swagger-router-controller: "GetAllTodos"
    post:
      description: "Add a new Todo"
      operationId: "AddTodo"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "todo"
        description: "The todo to be added"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
      x-swagger-router-controller: "AddTodo"
  /todo{id}:
    get:
      description: "Retrieve a single todo by ID"
      operationId: "FindTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the todo to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Todo response"
          schema:
            $ref: "#/definitions/Todo"
      x-swagger-router-controller: "FindTodoById"
    delete:
      description: "delete a todo by Id"
      operationId: "DeleteTodoByID"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the todo to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "todo deleted"
      x-swagger-router-controller: "DeleteTodoById"
    put:
      description: "Update a todo by id"
      operationId: "UpdateTodoById"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the todo being updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "updated_todo"
        in: "body"
        description: "the udpated todo"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Todo updated"
        400:
          description: "You done fucked up"
  # /hello:
  #   # binds a127 app logic to a route
  #   x-swagger-router-controller: hello_world
  #   get:
  #     description: Returns 'Hello' to the caller
  #     # used as the method name of the controller
  #     operationId: hello
  #     parameters:
  #       - name: name
  #         in: query
  #         description: The name of the person to whom to say hello
  #         required: false
  #         type: string
  #     responses:
  #       "200":
  #         description: Success
  #         schema:
  #           # a pointer to a definition
  #           $ref: "#/definitions/HelloWorldResponse"
  #       # responses may fall through to errors
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
    Todo:
      Type: "object"
      properties:
        todo_id:
          type: "integer"
          description: "ID for the todo"
        todo:
          type: "string"
          description: "The todo item"
        datecreated:
          type: "string"
          format: "date-time"
          description: "Timestamp when the todo was creaded. Set by server."
        author: 
          type: "string"
          description: "Creator or owner of the todo"
        duedate:
          type: "string"
          format: "date-time"
          description: "When the todo is due"
        completed:
          type: "boolean"
          description: "Indicates"
          
  # HelloWorldResponse:
  #   required:
  #     - message
  #   properties:
  #     message:
  #       type: string
  # ErrorResponse:
  #   required:
  #     - message
  #   properties:
  #     message:
  #       type: string
